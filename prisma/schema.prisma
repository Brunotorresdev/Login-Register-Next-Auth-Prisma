// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String         @unique
  password    String?
  accounts    Account[]
  sessions    Session[]
  authenticators Authenticator[]
}

model Account {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  userId             String    @db.ObjectId
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?   @db.ObjectId
  accessToken        String?   @db.ObjectId
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@index([providerId, providerAccountId], name: "providerId_providerAccountId_idx")
}

model Session {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String    @unique
  userId       String
  user         User      @relation(fields: [userId], references: [id])
  expires      DateTime
}

model Authenticator {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  credentialId  String   @unique
  publicKey     String
  counter       Int
  createdAt     DateTime @default(now())
}